version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - KAFKA_BROKERS=broker:9092
      - KAFKA_TOPIC_CRAWL=crawl_results
    depends_on:
      - db
      - broker
    restart: unless-stopped
    networks:
      - app-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Database service
  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Kafka broker (KRaft mode)
  broker:
    image: bitnami/kafka:3.6.1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@broker:9093
      - KAFKA_CFG_LOG_DIRS=/tmp/kraft-combined-logs
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - app-network

  # Cassandra
  cassandra:
    image: bitnami/cassandra:4.1
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=local-cluster
      - CASSANDRA_NUM_TOKENS=16
    volumes:
      - cassandra_data:/bitnami/cassandra
    networks:
      - app-network

  # Consumer service
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKERS=broker:9092
      - KAFKA_TOPIC_CRAWL=crawl_results
      - CASSANDRA_CONTACT_POINTS=cassandra
      - CASSANDRA_KEYSPACE=scraper
    depends_on:
      - broker
      - cassandra
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  kafka_data:
  cassandra_data: