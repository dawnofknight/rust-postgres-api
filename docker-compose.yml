version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8081:3000"
    environment:
      - CASSANDRA_CONTACT_POINTS=cassandra
      - CASSANDRA_KEYSPACE=scraper
    depends_on:
      - cassandra
    restart: unless-stopped
    networks:
      - app-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Database service
  cassandra:
    image: cassandra:4.1
    ports:
      - "9042:9042"
    networks:
      app-network:
        ipv4_address: 172.28.0.2
    environment:
      - CASSANDRA_SEEDS=172.28.0.2
      - CASSANDRA_LISTEN_ADDRESS=172.28.0.2
      - CASSANDRA_BROADCAST_ADDRESS=172.28.0.2
      - CASSANDRA_RPC_ADDRESS=0.0.0.0
      - CASSANDRA_BROADCAST_RPC_ADDRESS=172.28.0.2
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e \"DESCRIBE KEYSPACES;\" || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 30
      start_period: 30s

  # Cassandra Web UI service
  cassandra-web:
    image: ipushc/cassandra-web:latest
    container_name: cassandra-web
    depends_on:
      cassandra:
        condition: service_healthy
    environment:
      - CASSANDRA_HOST_IPS=172.28.0.2
      - CASSANDRA_PORT=9042
      - CASSANDRA_USERNAME=cassandra
      - CASSANDRA_PASSWORD=cassandra
    ports:
      - "8083:8083"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes: {}